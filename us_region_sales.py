# -*- coding: utf-8 -*-
"""US_Region_Sales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12JcRNrrf16MhxmyilCWCQlqh5gEdNwtq
"""

import numpy as np
import pandas as pd
import os
import math
from datetime import timedelta, datetime as dt, date
import time

link = 'https://drive.google.com/file/d/1M6eGd0vZw83KxyC5xd6TQipOmkvnzom0/view?usp=drive_link'

path = 'https://drive.google.com/uc?export=download&id='+link.split('/')[-2]
sales_data=pd.read_csv(path)

sales_data.head(10)

sales_data.info()

sales_data.dtypes
# kieu du lieu: ProduceDate,OrderDate,ShipDate,DeliveryDate: Strings => phai chuyen qua Date

sales_data['ProcuredDate']=pd.to_datetime(sales_data['ProcuredDate'])
sales_data['OrderDate']=pd.to_datetime(sales_data['OrderDate'])
sales_data['ShipDate']=pd.to_datetime(sales_data['ShipDate'])
sales_data['DeliveryDate']=pd.to_datetime(sales_data['DeliveryDate'])
sales_data.dtypes

sales_data.info()
# Co 1 so gia tri Null: CurrencyCode,Discount Applied,Unit Price, Unit Cost

# Xu ly Missing data o cot: CurrencyCode, Điền phần null là USD
sales_data['CurrencyCode']=sales_data['CurrencyCode'].fillna('USD')

# Discount Applied: một số cái null ,Lấy trung bình theo loại sản phẩm

sales_data['Discount Applied'] = sales_data['Discount Applied'].replace({np.nan: None})

def fill_discount(product_id, discount):
    mean_val = discount
    if not discount:
        mean_val = round(sales_data.loc[(sales_data['_ProductID'] == product_id)]['Discount Applied'].mean(), 2)
    return mean_val

sales_data['Discount Applied']=sales_data.apply(lambda x: fill_discount(x['_ProductID'], x['Discount Applied']), axis=1)

# Price unit  : Một số cái null - lấy giá tb sản phẩm bán, cùng team bán
sales_data['Unit Price'] = sales_data['Unit Price'].replace({np.nan: None})

def fill_price(product_id, salesteam_id, unit_price):
    mean_val = unit_price
    if not unit_price:
        mean_val = round(sales_data.loc[(sales_data['_ProductID'] == product_id) & (sales_data['_SalesTeamID'] == salesteam_id)]['Unit Price'].mean(),2)
    return mean_val

sales_data['Unit Price'] = sales_data.apply(lambda x: fill_price(x['_ProductID'], x['_SalesTeamID'], x['Unit Price']), axis=1)

# Unit Cost : Một số cái null - lấy giá trong bình sản phẩm mua, cùng warehouseCode
sales_data['Unit Cost'] = sales_data['Unit Cost'].replace({np.nan: None})

def fill_cost(product_id, warehouse, unit_cost):
    mean_val = unit_cost
    if not unit_cost:
        mean_val = round(sales_data.loc[(sales_data['_ProductID'] == product_id) & (sales_data['WarehouseCode'] == warehouse)]['Unit Cost'].mean(),2)
    return mean_val

sales_data['Unit Cost'] = sales_data.apply(lambda x: fill_cost(x['_ProductID'], x['WarehouseCode'], x['Unit Cost']), axis=1)

# kiểm tra lại dữ liệu
sales_data.info()

sales_data['totalcost']=sales_data['Unit Cost']*sales_data['Order Quantity']
sales_data['totalSales']=(sales_data['Unit Price'])*(1-sales_data['Discount Applied'])*sales_data['Order Quantity']

sales_data['Profit']=sales_data['totalSales']-sales_data['totalcost']
sales_data.head(10)

sales_data.to_csv('US_region_sales_data_new.csv')